<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chiabi&#39;s dev blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chiabi.github.io/"/>
  <updated>2018-07-31T16:24:46.304Z</updated>
  <id>http://chiabi.github.io/</id>
  
  <author>
    <name>chiabi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018 장고걸스 서울 워크샵 후기</title>
    <link href="http://chiabi.github.io/2018/07/31/djangogirls/"/>
    <id>http://chiabi.github.io/2018/07/31/djangogirls/</id>
    <published>2018-07-31T04:03:45.000Z</published>
    <updated>2018-07-31T16:24:46.304Z</updated>
    
    <content type="html"><![CDATA[<p>기다리던 장고걸스 서울 워크샵 소식이 올라왔을 때 기쁘면서도 걱정이 되었다. 나는 파이썬과 장고는 생소하지만, 프로그래밍을 전혀 모르는 사람은 아니며 퍼블리셔로는 3년을 일했는데 개발 입문자를 위한 이 워크샵에 당첨될 수 있을까? 그래서 참가 신청 때 개발 경험이 있는지 등을 묻는 질문지를 보면서 이거 살짝 뻥을 쳐야하는 건가 생각했다. 차마 그럴 수 없어서 매우 솔직하게 썼는데 ‘장고걸스에서의 경험을 나누고 싶고 깃헙을 관리하고 있고 개발 블로그도 운영하고 있습니다’라는 나의 어필이 통한 것일까 당첨이 되었다. (야호!)<br>그리고 스쿨 동기들에게도 슬랙으로 워크샵 소식을 공유했더니 몇분이 신청해서 같이 참여하게 되었다.</p><p><img src="/images/post_django1.jpg" alt="장고걸스 행사장 앞에 있는 배너"></p><h2 id="장고걸스는-개발-입문자가-가장-편안한-마음으로-참여할-수-있는-개발-행사이다"><a href="#장고걸스는-개발-입문자가-가장-편안한-마음으로-참여할-수-있는-개발-행사이다" class="headerlink" title="장고걸스는 개발 입문자가 가장 편안한 마음으로 참여할 수 있는 개발 행사이다."></a>장고걸스는 개발 입문자가 가장 편안한 마음으로 참여할 수 있는 개발 행사이다.</h2><p>2018년의 나의 다짐은 ‘마크업만이 아니라 스크립트도 잘 다루고 최신 프론트엔드 트렌드도 따라갈 수 있는 개발자가 되자’였다. 그래서 3년을 다녔던 웹 에이전시를 나오기로 했고, 눈여겨보고 있던 패스트캠퍼스의 프론트엔드 스쿨 과정을 등록했다. 마침 시기도 적절한 게 퇴사일과 학원 개강일 사이에 2주 정도의 텀이 있었다. 학원에서는 각종 개발 커뮤니티와 밋업, 컨퍼런스에 참여하기를 권장했고 실제로 그렇게 열심히 살아야만 이 시대의 개발자(적어도 내가 이상으로 삼았던 개발자)로 살아갈 수 있는 것 같았다. 일단 페이스북 그룹이나 슬랙에 가입했다. 커뮤니티가 다양한 만큼 종종 다양한 행사 소식도 올라왔다. 간단히 맥주를 마시면서 개발에 관한 얘기를 나눠보자는 모임부터 해마다 정기적으로 열리는 것 같은 컨퍼런스 소식까지 다양했다. 그런데 그 많은 행사 중에 어느 것 하나 선뜻 참여할 용기가 나지 않았던 이유는 내가 꿔다놓은 보릿자루같이 굴 것 같아서였다. </p><blockquote><p>‘아는 사람 하나 없이 뻘쭘하게 있을 것 같아.’<br>‘대화하는데 내가 너무 몰라서 못 알아들으면 어떡하지?’<br>‘내가 너무 바보 같은 질문을 하면 어쩌지?’<br>‘입문자를 위한 모임은 없나?’</p></blockquote><p>이런 나의 걱정을 해소해주고 편안한 마음으로 참여할 수 있는 개발 행사가 장고걸스 워크샵이었다. </p><p>장고걸스 워크샵에서 가장 좋았던 점은 워크샵 기간 동안 지켜줘야 할 점에 대해 알려주는데, 그중 참석자는 어떠한 질문이라도 (너무 기초적이라 바보같이 느껴질 것 같은 질문이라도) 할 수 있다는 것이다. 요즘은 개발 커뮤니티에서도 어느 정도 자정하는 분위기인데, 가끔 너무 기초적인 것을 물어보는 사람에게 그 정도도 검색해서 찾아보지 않으냐며 날카롭게 구는 사람들이 몇몇 있다. 모르는 사람의 가장 큰 어려움은 이 모르는 걸 어떤 방법을 써야 해결할 수 있는지조차 모른다는 것이다. 아는 사람들이야 ‘“구글”에 “영어”로 이런 “키워드”로 검색하면 다 나와’, ‘“stack overflow”에 가면 다 있어’라고 말하지만, 그것조차 모를 수도 있는 법이다. 실제로 나는 웹 쪽으로 전향하기 전, 우체국에서 일할 당시만 해도 크롬은 안 썼다. 검색은 모두 네이버를 통해 이뤄졌고 어릴 때는 익스플로러가 업데이트되어서 UI가 조금이라도 바뀌면 화를 냈었다. 내가 그 사람 옆에서 성장 과정을 계속 지켜보지 않은 이상은 상대가 어느 정도 알 것이라는 판단을 섣부르게 해서는 안 된다.</p><p>아무튼, 이런 나의 여과 없이 나오는 질문에도 친절히 알려주신 <strong>이재열</strong> 코치님께 감사드린다. </p><h2 id="장고걸스에는-훌륭하고-친절한-코치님이-많이-계신다-모른다고-걱정하지-말자"><a href="#장고걸스에는-훌륭하고-친절한-코치님이-많이-계신다-모른다고-걱정하지-말자" class="headerlink" title="장고걸스에는 훌륭하고 친절한 코치님이 많이 계신다. 모른다고 걱정하지 말자"></a>장고걸스에는 훌륭하고 친절한 코치님이 많이 계신다. 모른다고 걱정하지 말자</h2><p>행사장에 딱 들어섰을 때 느낀 것은 ‘많다! 사람이 많다!!’였다. 파란 옷을 입은 워크샵 신청자도 많은데 흰옷을 입고 있는 코치님이나 검은 옷을 입고 있는 관계자분도 많았다. 조를 꾸려서 한 조에 신청자 3명 정도에 코치님이 1명 이상이 붙어서 진행하는데, 그렇게 구성된 조가 20팀 이상이었던 것 같다.<br>워크샵 첫날(7/20)은 7시에 시작되어 2시간 정도 파이썬을 설치하거나 에디터를 설치하는 것 같은 기본적인 개발환경을 세팅했다. 두 번째 날(7/21)에 본격적으로 장고걸스 튜토리얼을 따라 하면서 장고로 블로그를 만들었다. 우리 조는 나를 포함해 개발을 배워보셨거나 배우고 있는 분들이어서 어쩌다 보니 굉장히 빠르게 진행되어 심화 튜토리얼까지 진행해버렸지만, 중간중간 막히는 부분도 있었다. 나의 경우는 내가 찾을 수 없는 오류가 발생하는 경우거나 git에서 실수해버린 경우였는데 코치님이 팀 테이블 주위를 열심히 뛰어다니면서 문제가 발생할 때마다 같이 봐주시고 해결해주셨다. 그리고 블로그를 만들면서 개인적으로 파이썬 문법과 장고에 대해 어느 부분까지가 장고의 기능이고, 파이썬의 문법인지 궁금한 점을 여쭤봤는데 매우 친절하고 쉽게 알려주셨다.<br>특히 첫날에 MVC에 대해 설명해주셨는데, 사실 이전에는 MVC, MVVM 등의 아키텍처 패턴에 대한 이해가 많이 부족했다. 리액트는 뷰만 담당하는 라이브러리이고 앵귤러는 프레임워크다라는 설명을 들었을 때도 앵귤러에 대한 경험과 이해가 없다 보니 어떤 점이 다른 것인지 이해하기는 힘들었다. 관련해서 글을 찾아봐도 이해를 잘 못 했는데, 이재열 코치님의 설명을 듣고 장고걸스 튜토리얼을 따라 해 보면서 MVC 패턴이나 프레임워크란 것이 어떤 것인지 이해하게 되었다.</p><p><img src="/images/post_django2.jpg" alt="나의 첫 파이썬/장고 프로젝트"></p><p>장고걸스 워크샵의 좋은 점은 내가 혼자서 한다면 몇 날 며칠이 걸릴지도 모르는 문제를 코치의 도움을 받아 빠르게 해결할 수 있다는 것이다. 혼자 공부하는 것에도 장점은 있다. 해결 방법을 찾는 과정 또한 공부일 것이고, 문제 해결 능력을 키울 수 있다. 해결했다는 성취감 역시 얻을 수 있다. 단점은 매우 많은 삽질을 해야 하고 엄청나게 시간을 낭비할지 모른다는 것이다. 이전에 장고걸스 튜토리얼을 따라 해보려다 포기한 이유는 튜토리얼 자체가 ‘이 정도는 아시죠?’ 같은 느낌이 없지 않아 있는 데다가 그 이 정도를 맞추기 위해 어디부터 공부해야 할 지 감이 안 잡히고, 오류 상황이 발생했을 때 그걸 풀 능력이 내게 부족해서 gulp와 Sass를 처음 익힐 때처럼 매우 고통의 시간이 될 것 같은 예감이 들어서였다. 그래서 스쿨과정이 끝날 때쯤에는 어느 정도 스크립트에 익숙해져 있을 테니 그때 다시 도전하자는 마음으로 일단 접어두었었다.<br>단순히 따라하는 것뿐이더라도 개발의 한 사이클을 경험해보고 결과물을 만들게 되면 앞으로의 공부에 많은 도움이 된다. 그런 점에서 장고걸스는 개발 입문자에게 (혹은 나처럼 파이썬/장고 입문자에게) 굉장히 좋은 기회인 것 같다.</p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며"></a>마치며</h2><p><del>오늘도 작문 실력을 늘려야겠다는 깊은 반성을 하며…</del><br>장고걸스 워크샵을 신청한 계기는 ‘잘 만들어진 튜토리얼을 제공한다해도 누구의 도움도 없이 생소한 언어와 생소한 기술을 사용해 보는 것은 굉장히 오랜 시간이 걸리니까 워크샵을 통해 코치님들의 도움을 받아 한 사이클을 빠르게 경험해보자’였다. 실제로 코치님의 도움으로 튜토리얼을 따라하는데 큰 어려움은 없었다. 장고의 일부를 경험한 것이지만 웹 프레임워크라는 것이 어떤 것인지 경험해 볼 수 있어서 그것만으로도 굉장히 유익했다.<br>그런데 그런 목표 성취 이상의 경험이었다. 세마나 형식의 컨퍼런스 외에 이런 소통을 통한 커뮤니티 행사에 처음 참여해 본 것이었고 나 스스로 이전과 다르게 외향적으로도 적극적인 사람이 되었구나를 느꼈다. 그리고 앞으로 개발 커뮤니티의 행사에 참여할 용기를 얻었다. 다음에는 장고걸스에 코치로 참여하는 것을 목표로 해야겠다.</p><p><img src="/images/post_django3.jpg" alt="장고걸스 굿즈가 탐이 난다면 다음 워크샵 신청..."></p><hr><ul><li><a href="https://djangogirls.org/seoul/" target="_blank" rel="noopener">django girls seoul</a></li><li><a href="https://www.facebook.com/djangogirlsseoul/" target="_blank" rel="noopener">django girls seoul : 페이스북 커뮤니티</a></li><li><a href="https://tutorial.djangogirls.org/ko/" target="_blank" rel="noopener">장고걸스 튜토리얼</a></li><li><a href="https://tutorial-extensions.djangogirls.org/ko/" target="_blank" rel="noopener">장고걸스 튜토리얼 : 심화</a></li><li><a href="http://chiabi.pythonanywhere.com/" target="_blank" rel="noopener">나의 장고 블로그 결과물</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;기다리던 장고걸스 서울 워크샵 소식이 올라왔을 때 기쁘면서도 걱정이 되었다. 나는 파이썬과 장고는 생소하지만, 프로그래밍을 전혀 모르는 사람은 아니며 퍼블리셔로는 3년을 일했는데 개발 입문자를 위한 이 워크샵에 당첨될 수 있을까? 그래서 참가 신
      
    
    </summary>
    
      <category term="log" scheme="http://chiabi.github.io/categories/log/"/>
    
    
      <category term="log" scheme="http://chiabi.github.io/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>TIL</title>
    <link href="http://chiabi.github.io/2018/07/28/TIL/"/>
    <id>http://chiabi.github.io/2018/07/28/TIL/</id>
    <published>2018-07-28T08:15:30.000Z</published>
    <updated>2018-07-31T04:02:46.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="엔트리"><a href="#엔트리" class="headerlink" title="엔트리"></a>엔트리</h3><p>감기와 올해 4학년이 된 사촌동생이 함께 찾아왔다.(신난다) 자는 동안은 감기로 죽어있고, 깨어있는 동안은 열정적인 여동생과 놀아줘야했다. 다음주 내내 휴가를 낸 언니는 그것만 바라보며 약간 득도한 모양이다. ‘치킨차차’라고 기억력 향상에 매우 유익한 보드게임이 있는데, 아무도 나와 놀아주지 않아서 구석에서 썩고 있던 것을 사촌동생이 잘도 찾아내서 끝나지 않을 것만같은 꼬리잡기 릴레이를 했다.</p><p>동생의 흥미를 다른 곳으로 돌리기 위해 게임 만드는 거 좋아하냐는 질문으로 약을 팔면서 컴퓨터 앞에 앉혔다. 다행히 게임 만드는 게 재미있을 것 같다며 흥미로워 했다. 엔트리는 네이버에서 홍보할 당시에 소프트웨어적 사고력을 키워준대서 해봤었는데, 오랜만에 들어오니 많이 체계적으로 바껴있고 작품 공유하기에는 어린애들이 만든게 맞나 싶을 정도로 꽤 잘 만든 것도 있었다. 학습하기를 따라하도록 하고서 지켜봤는데, 학습용이라는 목적에 맞게 단계적으로 진행하도록 설명 팁이 계속 제공되었다.<br>학습하기 외에 작품만들기를 이용하면, 학습하기에서 학습했던 것을 토대로 자신만의 창의적인 작품을 만들어 볼 수 있는데, 이걸 봤다가 갑자기 모르는 UI가 급 보여지니까 어렵게 느껴졌는지 사촌동생의 흥미 역시 급 하락해버렸다… </p><p>액괴 영상에 밀려서 더이상 진행하지는 못했지만, 학습하기에서 반복문 안에 로직을 넣는 것이 나왔었는데, 이런 사고력을 어릴때부터 키운다면 나중에 다른 언어를 공부한다해도 크게 어려움이 없겠구나 생각되었다. 요즘 초등학생들은 이런 엔트리나 스크래치를 이용해서 코딩교육을 한다고 들었는데, 나중에라도 동생이 이쪽으로 흥미가 생기거나 필요하게 되면 나한테 도움을 구해줬으면 좋겠다. 그리고 꼭 개발자가 되고싶지 않더라도 경험이란 것은 앞으로의 선택에 중요한 밑거름이 되니까 도움이 되었으면 좋겠다.  </p><p>갑자기 고등학생때 RPG 쯔꾸루로 게임을 만들어본다고 알지도 못하는 스크립트를 Ctrl + C / V 하면서 혼자 삽질했던 기억이…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;엔트리&quot;&gt;&lt;a href=&quot;#엔트리&quot; class=&quot;headerlink&quot; title=&quot;엔트리
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
  <entry>
    <title>TIL</title>
    <link href="http://chiabi.github.io/2018/07/27/TIL/"/>
    <id>http://chiabi.github.io/2018/07/27/TIL/</id>
    <published>2018-07-27T14:13:07.000Z</published>
    <updated>2018-07-28T09:02:52.536Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="퍼블리싱-외주-완료"><a href="#퍼블리싱-외주-완료" class="headerlink" title="퍼블리싱 외주 완료"></a>퍼블리싱 외주 완료</h3><p>오늘은 업체에 찾아가서 마지막 마무리 작업을 했다. 내 마크업에 기존 개발중인 기능을 적용해야 하는데, UI가 수정되기도 해서 추가 작업을 했다. 수정요청이 좀 많아서 6시까지 완료할 수 있을까 조금 걱정했는데, 업체 개발자와 협의해서 먼저 개발해야하는 기능부터 수정해서 넘겨주는 식으로 작업을 진행해서 다행히 시간내에 완료할 수 있었다. 디자인도 외주를 맡긴 상황이라 기획이나 디자인이 빠르게 넘어오지 않은 상태에서 말로만 이 부분이 변경이 있다라는 식으로 전달 받을때는 당황스러웠는데, 손그림으로라도 그려서 주셨으면 좋겠다고 하니 AdobeXD로 빠르게 수정된 디자인을 받았다. 디자인하는 것을 옆에서 구경했는데, AdobeXD에서 아이콘을 리스트에 동일하게 추가하는데 스크롤만 내리니 아이콘이 간격대로 생성이 되었다. 포토샵은 어느정도 기본만 할 수 있는 수준이고, 이미지 내보내는 부분 정도만 액션을 추가한다든지 하는 식으로 활용하고 있어서 포토샵에도 그런 기능이 있는지는 모르겠지만 굉장히 신기했다.(업무 효율 올라가는 소리가…)<br>굉장히 신기해서 찾아봤는데, 반복 그리드라는 작업이었다.<br>오늘 업체 개발자와 커뮤니티를 하면서 느낀게 상대의 말이 이해가 안되면 많이 물어봐야하고, 상대방이 알아듣기 쉽도록 설명해야 된다는 거였다. 아무리 개발 용어라도,  어떤 의도에서 썼는지는 본인만 알 수 있었다. 그리고 나와 대화하는 사람이 이정도는 알고있을 것이다라는 예측은 하면 안된다는 것.<br>그리고 동적으로 리스트를 생성하기를 원하셨고, 그부분에서 CSS가 안 먹기 때문에 CSS를 인라인으로 넣겠다고 하셔서 이부분에 대한 커뮤니케이션이 좀 어려웠는데, 결론은 내가 개발자님이 말씀하시는 데이터 형태에 맞춰 리스트가 동적으로 생성되는 코드를 짜보기로 했고, 마크업 개발 외주여서 이것까지 하게 될 줄은 몰랐지만 재미있는 작업이었다.<br>개발자님이 말씀하신 배열이 어떤 구조인지 여쭤보고, for문 안에서 리스트 아이템에 데이터를 넣고 생성되도록 했는데, for문을 두번 돌리기 전에 filter 메소드를 통해 두번째 배열의 아이템이 첫번째 배열의 정보를 가지고 있는지를 먼저 체크하도록 해서 다음 for문을 돌릴때 대상에 두번째 배열에서 필터링 된 배열 정보를 넘겨줬다. 그래서 for문을 좀 더 덜 돌 수 있게 되었다.</p><!-- > + 개발자님: 동적으로 이 리스틑를 생성하는데 제가 해보니 CSS가 안 먹더라구요. > + 나: 동적으로 생성하는데 CSS가 안먹는다구요?> + 개발자님: 제가 배열을 2개를 만들어서 이중 for문을 써서 요소를 생성하는데, 나중에 값이 추가되면 요소가 추가되는 게 아니라 다시 동적으로 그리게 하는데 CSS가 안먹더라구요. 이부분을 만약에 개발자님이 해주실 수 없으면 CSS를 인라인으로 넣으려고 하는데, 그럼 제가 해당하는 CSS를 일일이 찾아야 하니까 그 CSS부분만 저에게 알려주시면 인라인으로 넣으려합니다.> + 나: 어... 동적으로 생성하는데 이벤트가 아니라 CSS가 안 먹는다는 부분이 저는 잘 이해가 안되는데요... 그리고 인라인으로 넣으면 마크업이 굉장히 지저분해지고 길어질 것 같아요. 배열을 중첩으로 쓰신다는 건가요?> + 개발자님: 아 여기 배열이 model이랑 support로 해서 for문을 이중으로 썼거든요. (소스코드 보여주심)> + 나: 아..음... 그러면 일단 이부분을 제가 스크립트로 짜보고 말씀드릴게요. -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;퍼블리싱-외주-완료&quot;&gt;&lt;a href=&quot;#퍼블리싱-외주-완료&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
  <entry>
    <title>TIL</title>
    <link href="http://chiabi.github.io/2018/07/26/TIL/"/>
    <id>http://chiabi.github.io/2018/07/26/TIL/</id>
    <published>2018-07-26T14:58:25.000Z</published>
    <updated>2018-07-26T16:04:47.005Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="Sass-스터디"><a href="#Sass-스터디" class="headerlink" title="Sass 스터디"></a>Sass 스터디</h3><p>Sass는 계속 쓰고 있었지만, 스터디를 준비하면서 다시 공부했다. Dart Sass가 나온 배경이라든지 Sass blog에 올라온 글도 읽어보고 처음부터 시작한다 생각하고  Sass를 사용하기 위한 환경 설정도 다시 해보니, 다른 방법이 있거나 제대로 모르고 있던 부분도 알 수 있었다.<br>특히 설치에서 애를 먹었는데, 내가 현재 사용하고 있는 node 버전은 8이었고, Sass는 아직 node 8버전에서 공식적으로 지원되는 것이 아니어서 발생한 문제였다. 그래서 nvm을 통해 설치된 node 버전 중 6.10.0으로 변경하니 발생했던 오류가 사라졌다.<br>가볍게 쓰려고 사용하고 있던 VSCode 익스텐션인 Live Sass Compiler는 생각보다 훨씬 좋았다. Autoprefix를 같이 쓰려고 gulp-sass 사용할 때 설치하고 설정해주고 했었는데, Live Sass Compiler는 이를 지원한다.<br>다른 사람에게 설명해주기 위한 준비과정 자체가 많은 도움이 되는 것 같다. 내가 무엇을 알고, 무엇을 모르고 있는지가 좀 더 명확해진다. 오늘 Sass 문법까지 다루고 싶었는데, 환경 설정하면서 package.json부터 설명을 해야 되어서 생각보다 시간이 훌쩍 지나가버렸다. 대충 Sass를 사용하면 어떤 점이 좋을지 왜 Sass를 사용하는지 위주로 대화를 했고, 문법 관련해서는 생소한 <code>&amp;</code>같은 부모참조 선택자나 Sass와 SCSS의 차이, BEM 방법론을 사용할 때 Sass 활용 방법 (중첩이나 부모참조 선택자)위주로 설명했다.<br>함수나 리스트, 맵과 반복문을 사용해 어떤 것을 할 수 있을지 등도 보여주고 싶었는데, 시간이 부족해서 아쉬웠다.<br>Sass는 내가 스크립트 언어를 익히는데 많은 도움을 준 언어라 굉장히 애착이 간다. 그리고 그걸 오늘 다시 공부해보면서 느꼈다. CSS로는 할 수 없는 정말 멋진 기능이 많은데 오늘 다 못해서 아쉽고, 나중에 또 시간을 내야겠다. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;Sass-스터디&quot;&gt;&lt;a href=&quot;#Sass-스터디&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
  <entry>
    <title>TIL</title>
    <link href="http://chiabi.github.io/2018/07/25/TIL/"/>
    <id>http://chiabi.github.io/2018/07/25/TIL/</id>
    <published>2018-07-25T14:59:38.000Z</published>
    <updated>2018-07-25T16:42:26.366Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="TIL-레포지토리-정리"><a href="#TIL-레포지토리-정리" class="headerlink" title="TIL 레포지토리 정리"></a>TIL 레포지토리 정리</h3><p>깃헙의 TIL 레포지토리의 구조를 좀 수정했다. 프론트엔드 개발 스쿨과정에서 WEEK_N 디렉토리로 정리했던 파일들은 [FDS]fds-9로 옮겼고, 앞으로 카테고리 별로 공부한 내용을 관리하려 한다.<br>깃헙의 project를 이용해서 할 일을 관리해보려고 하는데, 풀리퀘 말고 이슈와 커밋을 연결해서 깃헙 이슈에 기록을 남기는 방법을 찾아봤는데, 좀 더 찾아봐야겠지만 커밋으로 이슈를 닫는 기능은 있었다.</p><ul><li><a href="https://help.github.com/articles/closing-issues-using-keywords/" target="_blank" rel="noopener">Closing issues using keywords</a></li></ul><h3 id="리덕스-공부"><a href="#리덕스-공부" class="headerlink" title="리덕스 공부"></a>리덕스 공부</h3><p>리덕스 문서 원문과 번역본을 같이 보면서 공부하고 있다. 일단 기초 부분을 한번 읽어보면서 따라 치는 식으로 하고 있는데,<br>에러가 발생해서 확인해봐야 한다. </p><hr><p>국비 과정때 같이 공부했던 동기와 스터디를 하기로 했는데, 내일 Sass를 주제로 진행할 예정이다. 최근에 외주하면서도 사용하기는 했는데, 전 회사에서 했던 것처럼 내가 발표하는 형식으로 진행해야 해서 다시 한번 정리해야겠다. 원래는 낮에 리덕스 공부하고 나서 준비하려고 했는데, 생각보다 리덕스 개념이 잘 이해가 안가서 시간을 많이 잡아먹었다. 비록 에러를 아직 해결하지 못했지만, 예제를 통해 기초파트의 한 사이클을 도니까 좀 이해가 되는 것 같다. 내일은 이 에러를 해결하고 심화부분을 보면서 파이널 프로젝트로 했던 SEEMVA를 수정해봐야겠다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;TIL-레포지토리-정리&quot;&gt;&lt;a href=&quot;#TIL-레포지토리-정리&quot; class=&quot;head
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
  <entry>
    <title>Self Dividing Numbers</title>
    <link href="http://chiabi.github.io/2018/07/25/SelfDividingNumbers/"/>
    <id>http://chiabi.github.io/2018/07/25/SelfDividingNumbers/</id>
    <published>2018-07-25T14:57:22.000Z</published>
    <updated>2018-07-25T17:17:09.442Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/self-dividing-numbers/description/" target="_blank" rel="noopener">leetcode 문제링크</a></p><blockquote><p>A self-dividing number is a number that is divisible by every digit it contains.<br>For example, 128 is a self-dividing number because <code>128 % 1 == 0</code>, <code>128 % 2 == 0</code>, and <code>128 % 8 == 0</code>.<br>Also, a self-dividing number is not allowed to contain the digit zero.<br>Given a lower and upper number bound, output a list of every possible self dividing number, including the bounds if possible.</p><p><strong>Example 1:</strong></p><ul><li>Input: </li><li>left = 1, right = 22</li><li>Output: <code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]</code><br><strong>Note:</strong></li><li>The boundaries of each input argument are <code>1 &lt;= left &lt;= right &lt;= 10000</code>.</li></ul></blockquote><h2 id="나의-풀이"><a href="#나의-풀이" class="headerlink" title="나의 풀이"></a>나의 풀이</h2><p>숫자를 문자열로 만들어 쪼개서 나누어떨어지면 push로 배열에 추가하는 방법<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 64ms</span></span><br><span class="line"><span class="keyword">var</span> selfDividingNumbers = <span class="function"><span class="keyword">function</span>(<span class="params">left, right</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> result = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = left; i &lt;= right; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i.toString().split(<span class="string">''</span>).every(<span class="function"><span class="params">item</span> =&gt;</span> i % <span class="built_in">parseInt</span>(item) === <span class="number">0</span>)) result.push(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>그런데 0이 포함되면 self-dividing number가 아니므로 이렇게 추가해줘도 될 것 같다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 68ms</span></span><br><span class="line"><span class="keyword">var</span> selfDividingNumbers = <span class="function"><span class="keyword">function</span>(<span class="params">left, right</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> result = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = left; i &lt;= right; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i % <span class="number">10</span> !== <span class="number">0</span> &amp;&amp; i.toString().split(<span class="string">''</span>).every(<span class="function"><span class="params">item</span> =&gt;</span> i % <span class="built_in">parseInt</span>(item) === <span class="number">0</span>)) result.push(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> selfDividingNumbers = <span class="function"><span class="keyword">function</span>(<span class="params">left, right</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> result = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = left; i &lt;= right; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> numbers = i.toString().split(<span class="string">''</span>);</span><br><span class="line">        <span class="keyword">let</span> divide = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> n <span class="keyword">of</span> numbers) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % n !== <span class="number">0</span>) &#123;</span><br><span class="line">                divide = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(divide) result.push(i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/self-dividing-numbers/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leetcode 문제링크&lt;/a&gt;&lt;/p&gt;
&lt;blockquo
      
    
    </summary>
    
      <category term="Algorithm" scheme="http://chiabi.github.io/categories/Algorithm/"/>
    
    
      <category term="algorithm" scheme="http://chiabi.github.io/tags/algorithm/"/>
    
      <category term="leetcode" scheme="http://chiabi.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>TIL</title>
    <link href="http://chiabi.github.io/2018/07/24/TIL/"/>
    <id>http://chiabi.github.io/2018/07/24/TIL/</id>
    <published>2018-07-24T11:59:40.000Z</published>
    <updated>2018-07-24T16:21:38.719Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="퍼블리싱-외주-완료"><a href="#퍼블리싱-외주-완료" class="headerlink" title="퍼블리싱 외주 완료"></a>퍼블리싱 외주 완료</h3><p>작업 기한은 27일까지이긴 하지만 웹에이전시에서 일할 당시를 생각하면, 개발로 넘어가면 수많은 변수가 생기기 때문에 개발을 붙일 수 있는 시간에 여유를 드려야 할 것 같아서 일찍 완료해 넘겼다. 학원으로 이동 중에 연락이 와서, 이미지가 보이지 않고 이벤트들이 하나도 발생하지 않는다고 확인 요청이 왔다. 별다른 개발 환경세팅이 필요한지 여쭤보시기에 혹시 서버에 올려서 테스트하거나 아니면 라이브 서버를 통해 확인하고 계시냐고 여쭤봤는데, 개발자분이 그렇다고 하시기는 했는데, 그냥 로컬에서 파일을 열어 확인해보셨던 것 같다. 그래서 절대경로로 된 path를 읽지 못하는 거였다. 나는 작업할 때 vscode의 라이브 서버 확장프로그램을 사용해서 이상이 없었지만 상대경로로 다시 수정해서 넘겨드렸다.</p><h3 id="모의-면접"><a href="#모의-면접" class="headerlink" title="모의 면접"></a>모의 면접</h3><p>학원에서 진행하는 마지막 모의 면접을 봤다. 기술 면접은 아니고 자기소개서를 바탕으로 하는 인성 면접이었는데, 1차로 봤던 모의 면접에 비해 많이 나아진 것 같다. 프론트엔드 개발에 관련된 프로젝트를 해보고 기업조사도 하면서 좀 더 내가 어떤 방향으로 나아가야할 지 목표가 확실해지고, 나 자신에 대해 더 알게 되어서 말할 거리가 많이 생긴 것 같다.</p><h3 id="리덕스-복습"><a href="#리덕스-복습" class="headerlink" title="리덕스 복습"></a>리덕스 복습</h3><p>외주로 조금 소홀해진 복습에 다시 열중해야겠다. 일단 가장 하고 싶었던 context API로 만든 파이널 프로젝트를 리덕스를 이용해 수정하는 것을 하기 위해 리덕스를 복습하고 있다. 튜토리얼을 따라서 하는데, 특강때 했던 내용이 하나씩 다시 생각나고 있다. </p><h3 id="Git-github-특강"><a href="#Git-github-특강" class="headerlink" title="Git, github 특강"></a>Git, github 특강</h3><p>fork한 저장소의 최신 변경사항을 받아오는 방법에 대한 내용이 주였고, 관련해서 실습도 진행되었다.</p><ul><li>git stash에 대해 좀 더 찾아보자. </li></ul><hr><p>날이 너무 더워서 많이 이동하는 날은 기력이 쭉 빠진다. 얼른 시원해졌으면 좋겠다. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;퍼블리싱-외주-완료&quot;&gt;&lt;a href=&quot;#퍼블리싱-외주-완료&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
  <entry>
    <title>MaxIncreasetoKeepCitySkyline</title>
    <link href="http://chiabi.github.io/2018/07/24/MaxIncreasetoKeepCitySkyline/"/>
    <id>http://chiabi.github.io/2018/07/24/MaxIncreasetoKeepCitySkyline/</id>
    <published>2018-07-24T11:55:37.000Z</published>
    <updated>2018-07-25T16:42:48.719Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/max-increase-to-keep-city-skyline/description/" target="_blank" rel="noopener">leetcode 문제링크</a></p><blockquote><p>In a 2 dimensional array grid, each value grid[i][j] represents the height of a building located there. We are allowed to increase the height of any number of buildings, by any amount (the amounts can be different for different buildings). Height 0 is considered to be a building as well. </p><p>At the end, the “skyline” when viewed from all four directions of the grid, i.e. top, bottom, left, and right, must be the same as the skyline of the original grid. A city’s skyline is the outer contour of the rectangles formed by all the buildings when viewed from a distance. See the following example.</p><p>What is the maximum total sum that the height of the buildings can be increased?</p><p><strong>Example:</strong></p><ul><li>Input: <code>grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]</code></li><li>Output: 35<br><strong>Explanation:</strong> </li><li>The grid is:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ [3, 0, 8, 4], </span><br><span class="line"> [2, 4, 5, 7],</span><br><span class="line"> [9, 2, 6, 3],</span><br><span class="line"> [0, 3, 1, 0] ]</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li>The skyline viewed from top or bottom is: [9, 4, 8, 7]</li><li>The skyline viewed from left or right is: [8, 7, 9, 3]</li></ul><p>The grid after increasing the height of buildings without affecting skylines is:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gridNew = [ [8, 4, 8, 7],</span><br><span class="line">          [7, 4, 7, 7],</span><br><span class="line">          [9, 4, 8, 7],</span><br><span class="line">          [3, 3, 3, 3] ]</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>Notes:</strong></p><ul><li><code>1 &lt; grid.length = grid[0].length &lt;= 50</code>.</li><li>All heights <code>grid[i][j]</code> are in the range <code>[0, 100]</code>.</li><li>All buildings in <code>grid[i][j]</code> occupy the entire grid cell: that is, they are a <code>1 x 1 x grid[i][j]</code> rectangular prism.</li></ul></blockquote><h2 id="나의-풀이"><a href="#나의-풀이" class="headerlink" title="나의 풀이"></a>나의 풀이</h2><p>배열을 두번이나 탐색해야해서 좋은 방법이 아닌 것 같아서 좀 괴로운데, 가장 단순하게 생각할 수 있는 방법인 것 같다. 먼저, 위/아래의 스카이라인과 좌/우의 스카이라인을 구해두고, reduce메소드를 사용해 다시 배열을 탐색하면서, 해당 좌표의 스카이라인 중 작은 값을 구하고 원래의 값을 뺀 값을 누적으로 더해주는 방법으로 풀어봤다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 64 ms</span></span><br><span class="line"><span class="keyword">var</span> maxIncreaseKeepingSkyline = <span class="function"><span class="keyword">function</span>(<span class="params">grid</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> upDown = [];</span><br><span class="line">    <span class="keyword">const</span> side = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, l = grid.length; i &lt; l; i++) &#123;</span><br><span class="line">        side.push(<span class="built_in">Math</span>.max(...grid[i]));</span><br><span class="line">        <span class="keyword">const</span> arr = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; l; j++) &#123;</span><br><span class="line">            arr.push(grid[j][i]);</span><br><span class="line">        &#125;</span><br><span class="line">        upDown.push(<span class="built_in">Math</span>.max(...arr));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> grid.reduce(<span class="function">(<span class="params">acc, row, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> acc + row.reduce(<span class="function">(<span class="params">a, col, i</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> a + (<span class="built_in">Math</span>.min(side[index], upDown[i]) - col); </span><br><span class="line">        &#125;, <span class="number">0</span>);</span><br><span class="line">    &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>코드 길이는 줄였는데, 더 느려졌다. 6번째 줄에 <code>const cMax = Math.max(...arr.map((item) =&gt; item[i]));</code> 이부분이 원인인 것 같다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 96ms</span></span><br><span class="line"><span class="keyword">var</span> maxIncreaseKeepingSkyline = <span class="function"><span class="keyword">function</span>(<span class="params">grid</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> grid.reduce(<span class="function">(<span class="params">acc, row, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> rMax = <span class="built_in">Math</span>.max(...row);</span><br><span class="line">        <span class="keyword">return</span> acc + row.reduce(<span class="function">(<span class="params">a, col, i</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> cMax = <span class="built_in">Math</span>.max(...arr.map(<span class="function">(<span class="params">item</span>) =&gt;</span> item[i]));</span><br><span class="line">            <span class="keyword">return</span> a + (<span class="built_in">Math</span>.min(rMax, cMax) - col)</span><br><span class="line">        &#125;, <span class="number">0</span>)</span><br><span class="line">    &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/max-increase-to-keep-city-skyline/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leetcode 문제링크&lt;/a&gt;&lt;/
      
    
    </summary>
    
      <category term="Algorithm" scheme="http://chiabi.github.io/categories/Algorithm/"/>
    
    
      <category term="algorithm" scheme="http://chiabi.github.io/tags/algorithm/"/>
    
      <category term="leetcode" scheme="http://chiabi.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>TIL</title>
    <link href="http://chiabi.github.io/2018/07/23/TIL/"/>
    <id>http://chiabi.github.io/2018/07/23/TIL/</id>
    <published>2018-07-23T14:10:16.000Z</published>
    <updated>2018-07-24T11:55:00.126Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="퍼블리싱-외주-80-진행"><a href="#퍼블리싱-외주-80-진행" class="headerlink" title="퍼블리싱 외주(80% 진행)"></a>퍼블리싱 외주(80% 진행)</h3><p>디자인 시안의 폰트 사이즈가 대부분 10px이하다. 어떤 버튼은 폰트 사이즈가 7px이다. 아이패드에서는 그나마 좀 잘 보이는데, 작업하는 내가 괴로울 정도로 노트북에서는 잘 안보인다.(내가 눈이 나쁜건가…)<br>쇼핑몰 퍼블리싱할 때 받았던 디자인에서는 대부분 기본적인 폰트 사이즈는 12px 혹은 14px이고 제일 작은 폰트 사이즈가 10px이었다. 그리고 그렇게 해야 가독성이 좋았는데, 아이패드나 브라우저에서 화면을 확대하는 방법이 있기 때문에 그렇게 하는 걸까.</p><ul><li><a href="http://koreawebdesign.com/typography-for-webdesign/" target="_blank" rel="noopener">웹디자인을 위한 타이포그라피 10가지 팁</a></li><li><a href="http://webactually.com/2015/10/%EB%B0%98%EC%9D%91%ED%98%95-%EC%9B%B9-%EB%94%94%EC%9E%90%EC%9D%B8%EC%97%90%EC%84%9C-%EA%B8%80%EC%A4%84%EC%9D%98-%EA%B8%B8%EC%9D%B4%EC%99%80-%EA%B8%80%EC%9E%90-%ED%81%AC%EA%B8%B0-%EA%B7%A0%ED%98%95/" target="_blank" rel="noopener">반응형 웹 디자인에서 글줄의 길이와 글자 크기 균형 잡기</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust/" target="_blank" rel="noopener">MDN - font-size-adjust</a></li></ul><p>디자인에 range 슬라이더가 있어서 찾아봤는데 rangeslider.js가 제일 복잡한 기능없이 간단하게 사용하기 좋았다.</p><ul><li><a href="http://rangeslider.js.org/" target="_blank" rel="noopener">rangeslider.js</a></li></ul><p>디자인 시안을 어떤 파일로 전달해주면 되냐고해서 포토샵이나 일러면 좋을 것 같다고 했더니 보낸 파일이 전혀 레이어가 분할되어 있지 않았다. sketch로 작업했구나 싶어서 차라리 sketch 파일로 보내달라고 했는데, 재플린으로 공유해달랄 걸 그랬나보다. 하지만 덕분에 윈도우에서 sketch파일을 보는 방법을 찾아보다가 <code>.sketch</code> 파일을 지원하는 Windows app인 <strong>lunacy</strong>라는 걸 찾았다.(무료다!!)<br>그리고 시안 수정은 또 클라이언트 업체의 상주 디자이너가 하는데(시안 자체는 외주), sketch는 안쓰는지 Adobe XD 파일을 보내줬다.<br>포토샵으로만 시안 받아서 퍼블리싱 해봤는데 덕분에 이런 저런 툴을 다양하게 사용해보고 있다.</p><ul><li><a href="https://icons8.com/lunacy" target="_blank" rel="noopener">lunacy</a></li><li><a href="https://www.adobe.com/kr/products/xd.html" target="_blank" rel="noopener">Adobe XD</a></li></ul><h3 id="알고리즘-문제-풀이"><a href="#알고리즘-문제-풀이" class="headerlink" title="알고리즘 문제 풀이"></a>알고리즘 문제 풀이</h3><p>문제가 조금 간단하고 장고걸스 튜토리얼에서 봤던 정도로도 풀 수 있을 것 같아서 파이썬으로도 풀어봤다.<br>range나 len 함수에 대해 찾다가 파이썬 문법을 공부하는데 도움이 될 것 같은 사이트를 찾았다.</p><ul><li><a href="https://wikidocs.net/book/1" target="_blank" rel="noopener">점프 투 파이썬</a></li></ul><hr><p>내일까지면 퍼블리싱 외주 작업은 끝날 것 같다. 그러면 다시 파이널 프로젝트에 집중해서 Context API를 썼던 부분을 리덕스로 변경하는 작업에 착수해야겠다. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;퍼블리싱-외주-80-진행&quot;&gt;&lt;a href=&quot;#퍼블리싱-외주-80-진행&quot; class=&quot;he
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
  <entry>
    <title>peakIndexInMountainArray</title>
    <link href="http://chiabi.github.io/2018/07/23/peakIndexInMountainArray/"/>
    <id>http://chiabi.github.io/2018/07/23/peakIndexInMountainArray/</id>
    <published>2018-07-23T13:10:22.000Z</published>
    <updated>2018-07-24T15:50:08.553Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/peak-index-in-a-mountain-array/description/" target="_blank" rel="noopener">leetcode 문제링크</a></p><blockquote><p>Let’s call an array A a mountain if the following properties hold:</p><p><code>A.length &gt;= 3</code><br>There exists some <code>0 &lt; i &lt; A.length - 1 such that A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code><br>Given an array that is definitely a mountain, return any <code>i</code> such that <code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code>.</p><p><strong>Example 1:</strong></p><ul><li>Input: [0,1,0]</li><li>Output: 1</li></ul><p><strong>Example 2:</strong></p><ul><li>Input: [0,2,1,0]</li><li>Output: 1</li></ul><p><strong>Note:</strong></p><ul><li>3 &lt;= A.length &lt;= 10000</li><li>0 &lt;= A[i] &lt;= 10^6</li><li>A is a mountain, as defined above.</li></ul></blockquote><h2 id="나의-풀이"><a href="#나의-풀이" class="headerlink" title="나의 풀이"></a>나의 풀이</h2><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><p>배열에서 조건에 일치하는 첫번째 인덱스를 찾아주는 <code>findIndex()</code> 메소드를 사용했다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 56 ms</span></span><br><span class="line"><span class="keyword">var</span> peakIndexInMountainArray = <span class="function"><span class="keyword">function</span>(<span class="params">A</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> A.findIndex(<span class="function">(<span class="params">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> item &gt; arr[index + <span class="number">1</span>];    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>A 배열은 산이라고 했으니까 Math.max의 인덱스를 구하는 방법을 사용했다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 56ms</span></span><br><span class="line"><span class="keyword">var</span> peakIndexInMountainArray = <span class="function"><span class="keyword">function</span>(<span class="params">A</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> max = <span class="built_in">Math</span>.max(...A);</span><br><span class="line">    <span class="keyword">return</span> A.findIndex(<span class="function"><span class="params">item</span> =&gt;</span> item === max);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>근데 위의 방법은 indexOf로 더 짧게 풀 수 있다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 56ms</span></span><br><span class="line"><span class="keyword">var</span> peakIndexInMountainArray = <span class="function"><span class="keyword">function</span>(<span class="params">A</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> A.indexOf(<span class="built_in">Math</span>.max(...A))</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>문제가 크게 어렵지 않아서 파이썬으로도 풀어봤다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 40ms</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">peakIndexInMountainArray</span><span class="params">(self, A)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type A: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        number = <span class="number">0</span></span><br><span class="line">        before = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> A:</span><br><span class="line">            <span class="keyword">if</span> number &gt; <span class="number">1</span> <span class="keyword">and</span> i &lt; before:</span><br><span class="line">                <span class="keyword">return</span> number - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                number = number + <span class="number">1</span></span><br><span class="line">                before = i</span><br></pre></td></tr></table></figure></p><h2 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h2><h3 id="Python-1"><a href="#Python-1" class="headerlink" title="Python"></a>Python</h3><p>파이썬의 for문은 자바스크립트의 for of처럼 i라는 변수에 리스트의 요소가 대입되니까 인덱스는 어떻게 구하지라고 생각했는데,<br>다음과 같이 <code>range</code>함수와 <code>len</code>함수를 이용하는 방법이 있었다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">peakIndexInMountainArray</span><span class="params">(self, A)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type A: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(A)<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> A[i] &gt; A[i<span class="number">-1</span>] <span class="keyword">and</span> A[i]&gt; A[i+<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">return</span> i</span><br></pre></td></tr></table></figure></p><ul><li>range(): 숫자 리스트를 자동으로 만들어 주는 함수</li><li>len(): 리스트 내 요소의 개수를 돌려주는 함수</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/peak-index-in-a-mountain-array/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leetcode 문제링크&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Algorithm" scheme="http://chiabi.github.io/categories/Algorithm/"/>
    
    
      <category term="algorithm" scheme="http://chiabi.github.io/tags/algorithm/"/>
    
      <category term="leetcode" scheme="http://chiabi.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>7월 3주차 주간회고</title>
    <link href="http://chiabi.github.io/2018/07/22/retrospective/"/>
    <id>http://chiabi.github.io/2018/07/22/retrospective/</id>
    <published>2018-07-22T13:41:12.000Z</published>
    <updated>2018-07-22T17:38:57.041Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-퍼블리싱-외주와-커뮤니케이션"><a href="#1-퍼블리싱-외주와-커뮤니케이션" class="headerlink" title="1. 퍼블리싱 외주와 커뮤니케이션"></a>1. 퍼블리싱 외주와 커뮤니케이션</h2><p>지난주 학원에서 3일간 진행했던 해커톤에서의 만남을 계기로 한 사이트의 퍼블리싱을 맡게 되었다. 남은 공부와 구직(기업조사라든지, 포트폴리오 사이트라든지)에 전념해야 할 것 같아서 고민이 되었는데, 사이트 업종 자체가 내가 흥미를 느끼고 있던 분야의 것이고, 다른 사람의 디자인을 그대로 구현해보는 것은 오랜만이라 흥미가 생겨서 계약하게 되었다.<br>업체 대표님의 신뢰는 중개하는 분에 대한 신뢰인 것 같기도 하고 해커톤 산출물만으로 괜찮다고 생각했던 건지, 별다른 포트폴리오를 보여달라고 하지 않아서 조금 당황스러웠다. 그래도 상주해서 하는 작업이 아니라서 그런지 조금 우려는 하시는 것 같아서 작업 기간 동안 영업 종료시간(6시)에 작업 현황을 보내드리고 있다.  </p><p>웹에이전시에서 일할 당시에는 직접 클라이언트와 커뮤니케이션 할 일이 없었고, 직원끼리는(다른 팀이더라도) 조금 전문적인 용어를 써도 어느 정도 이해할 수 있는 범위여서 커뮤니케이션에 지장이 없었는데, 이번에 직접 업체 대표님과 대화를 해보니 나로서는 크게 어려운 말이 아니었다고 생각했어도 상대방에게는 어렵게 느껴진다는 걸 알았다. (조금이라도 웹 개발 쪽 언어라면 그게 ‘HTML, CSS’ 혹은 ‘퍼블리싱’이더라도 개발자가 아닌 이상은 듣는 입장에서 식은땀을 흘리게 되더라…)<br>첫 미팅은 월요일이었는데, 화요일에 학원에서 진행했던 특강에서 정원희 개발자님이 하신 말씀이 그다음 커뮤니케이션에 많은 도움이 되었다. 정원희 개발자님이 하신 말씀 중에 커뮤니케이션을 할 때 서버라는 용어조차 모르는 사람도 있으므로 전문적인 용어를 쓰지 않고 모두 쉬운 말로 풀어서 한다고 하셨다. 생각해보니 상대방이 어떤 사람이냐에 상관없이 전문적인 용어를 마구 써서 대화를 풀어나가려는 사람은 실질적으로 내재한 지식의 총량이 어느 정도이건 간에 커뮤니케이션 면에서는 이기적이고 무능한 사람인 것 같다. 그리고 사실 어려운 것을 쉽게 풀어 설명하는 게 더 어려운 일이다.<br>특강을 듣고나니 과연 나는 상대방을 배려한 대화를 했었는지 반성하게 되었다. </p><h2 id="2-정원희-개발자님-특강"><a href="#2-정원희-개발자님-특강" class="headerlink" title="2. 정원희 개발자님 특강"></a>2. 정원희 개발자님 특강</h2><p>화요일(7월 17일), 패스트캠퍼스에서 진행한 정원희 개발자님 특강을 들었다. (정원희 개발자님은 트레바리의 CTO이자 개발자로 일하고 계신다.)<br>‘왜 스타트업 개발자가 되었는 지’와 ‘스타트업에서 살아남는(사랑받는) 개발자가 되기 위해 무엇을 했는지’에 대해서 강의를 해주셨다.<br>중소기업이며, 설립한 지 10년도 넘은 웹에이전시에서만 일해봐서, 자사 서비스를 제공하는 스타트업을 도전하고 싶었는데, 내가 스타트업을 가려고 한다면 어떤 고민을 해야할 지 알 수 있는 강의였다.<br>정원희 개발자님이 욕심에 비해 의지가 약한 사람이기 때문에 강제로 개발하는 환경에 본인을 던지기 위해 최적인 곳으로 회사를 선택하셨다는데, 그 부분이 많이 공감이 되었고, 취업을 해야할지 부족한 나를 채우는 시간을 가져야할지 어느 것이 더 좋은 선택인지 고민하고 있는 내게 방향을 제시해주었다.<br>실패 후 다시 도전은 또 다른 가산점이라는 말씀도 많이 도움이 되었다. 구직을 하려다보면 자격요건에 요구되는 다양한 경험과 경력 사항들이 있다. 이것을 다 채우고 완벽한 지원자가 되려면 나에게 취업은 요원한 일이 될 것이다. 당장 모든 것이 완벽하지 않더라도 어느 정도 준비가 되어있다면 부딪치면서 채워나가야 될 것 같다. 그 부딪치는 과정에서도 나는 많은 것을 배울 수 있을 것이다.</p><h2 id="3-장고걸스-워크샵"><a href="#3-장고걸스-워크샵" class="headerlink" title="3. 장고걸스 워크샵"></a>3. 장고걸스 워크샵</h2><p>장고걸스 워크샵 후기는 나중에 또 시간을 들여 작성을 하려한다. 새로운 것을 배우는 것, 경험해보는 것은 즐거운 일이다. 굉장히 유익한 경험이 었고, 단순히 ‘장고라는 파이썬 기반 웹 프레임워크를 경험해 본다’ 이상의 경험이었다.<br>장고걸스 워크샵을 신청한 계기는 ‘잘 만들어진 튜토리얼을 제공한다해도 누구의 도움도 없이 생소한 언어와 생소한 기술을 사용해 보는 것은 굉장히 오랜 시간이 걸릴 수 있으니 워크샵을 통해 코치들의 도움을 받아 한 사이클을 빠르게 경험해보자’였다.<br>프론트엔드 개발 스쿨 전에 이 튜토리얼에 도전해보려 했는데, 마치 ‘이정도는 다 아시죠?’라는 느낌을 받았고, 모르는 것을 일일이 찾아보다보니 엄청난 시간이 소요되었다. 나는 어떠한 거대한 장벽을 바라보는 느낌이었다.<br>장고걸스 워크샵에서는 어떠한 바보같은 질문도 허용된다는 점이 가장 좋았다. 왜냐하면 초보 여성 개발자 혹은 개발에 입문하려는 여성들을 위한 모임이니까!<br>워크샵 동안 튜토리얼을 따라가는 데는 처음에 봤을때보다 큰 어려움이 없었다. 아마도 프론트엔드 개발 스쿨을 통해 개발에 대해 더 아는 것이 생겼기 때문이기도 할 거고, 가장 어려운 개발 환경 설정의 대부분이 이미 되어있었기 때문일 것이다.(git이라든지 에디터라든지) 블로그 만들기는 생각보다 수월하게 진행되었지만 가상환경이라거나, 파이썬 문법, 장고의 기능 같은 점을 코치님(이재열 개발자님)께 많이 질문했던 것 같다. 코치님도 어려운 부분을 쉽게 설명해주시려 고심해서 말을 골라가며 친절히 설명해주셨다.<br>밋업 같은 것은 아직 아는 사람이 없고, 개발 경험이 많지 않아서 과연 잘 어울릴 수 있을까 부담스러워서 도전하지 못하고 있는데, 그런면에서 장고걸스 워크샵은 입문자가 가장 접근하기 좋은 개발 커뮤니티인 것 같다.<br>프론트엔드 개발과 함께 파이썬, 장고도 꾸준히 공부해서 다음에는 코치로 참여하는 것을 목표로 해야겠다.</p><hr><p>이번주에 일일 회고를 제대로 하지 못했다. 지금 목표는 일일 회고 / 일일 알고리즘 문제 풀이 / 일일 커밋이다. 어려운 일이 아닌 것 같은데도 온전히 내가 만들어서 하는 일만 있는 게 아닌 경우는(외주를 맡거나 회사를 다니게 되면) 또 쉽지만은 않은 일이 되어버리는 것 같다.<br>제일 중요한 것은 결과가 나만의 책임이 아닌 일에 집중하는 것이지만, 그 사이에서도 시간 관리를 잘해서 내 개인적인 목표도 성취할 수 있도록 조율해야 겠다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-퍼블리싱-외주와-커뮤니케이션&quot;&gt;&lt;a href=&quot;#1-퍼블리싱-외주와-커뮤니케이션&quot; class=&quot;headerlink&quot; title=&quot;1. 퍼블리싱 외주와 커뮤니케이션&quot;&gt;&lt;/a&gt;1. 퍼블리싱 외주와 커뮤니케이션&lt;/h2&gt;&lt;p&gt;지난주 학원에서
      
    
    </summary>
    
      <category term="회고" scheme="http://chiabi.github.io/categories/%ED%9A%8C%EA%B3%A0/"/>
    
    
      <category term="회고" scheme="http://chiabi.github.io/tags/%ED%9A%8C%EA%B3%A0/"/>
    
  </entry>
  
  <entry>
    <title>UniqueMorseCodeWords</title>
    <link href="http://chiabi.github.io/2018/07/19/UniqueMorseCodeWords/"/>
    <id>http://chiabi.github.io/2018/07/19/UniqueMorseCodeWords/</id>
    <published>2018-07-19T02:16:33.000Z</published>
    <updated>2018-07-24T15:50:27.415Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/unique-morse-code-words/description/" target="_blank" rel="noopener">leetcode 문제링크</a></p><blockquote><p>International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows: “a” maps to “.-“, “b” maps to “-…”, “c” maps to “-.-.”, and so on.</p><p>For convenience, the full table for the 26 letters of the English alphabet is given below:</p><p><code>[&quot;.-&quot;,&quot;-...&quot;,&quot;-.-.&quot;,&quot;-..&quot;,&quot;.&quot;,&quot;..-.&quot;,&quot;--.&quot;,&quot;....&quot;,&quot;..&quot;,&quot;.---&quot;,&quot;-.-&quot;,&quot;.-..&quot;,&quot;--&quot;,&quot;-.&quot;,&quot;---&quot;,&quot;.--.&quot;,&quot;--.-&quot;,&quot;.-.&quot;,&quot;...&quot;,&quot;-&quot;,&quot;..-&quot;,&quot;...-&quot;,&quot;.--&quot;,&quot;-..-&quot;,&quot;-.--&quot;,&quot;--..&quot;]</code> </p><p>Now, given a list of words, each word can be written as a concatenation of the Morse code of each letter. For example, “cab” can be written as “-.-.-….-“, (which is the concatenation “-.-.” + “-…” + “.-“). We’ll call such a concatenation, the transformation of a word.</p><p>Return the number of different transformations among all words we have.</p><p><strong>Example:</strong></p><ul><li>Input: words = [“gin”, “zen”, “gig”, “msg”]</li><li>Output: 2</li><li>Explanation: </li><li>The transformation of each word is:<br>“gin” -&gt; “–…-.”<br>“zen” -&gt; “–…-.”<br>“gig” -&gt; “–…–.”<br>“msg” -&gt; “–…–.”</li></ul><p>There are 2 different transformations, “–…-.” and “–…–.”.</p><p><strong>Note:</strong></p><ul><li>The length of words will be at most 100.</li><li>Each words[i] will have length in range [1, 12].</li><li>words[i] will only consist of lowercase letters.</li></ul></blockquote><h2 id="나의-풀이"><a href="#나의-풀이" class="headerlink" title="나의 풀이"></a>나의 풀이</h2><p>유니크한 값을 찾으면 다른 수의 경우도 나올 것 같아서 Set을 이용해보았다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 64ms</span></span><br><span class="line"><span class="keyword">const</span> morse = [<span class="string">".-"</span>,<span class="string">"-..."</span>,<span class="string">"-.-."</span>,<span class="string">"-.."</span>,<span class="string">"."</span>,<span class="string">"..-."</span>,<span class="string">"--."</span>,<span class="string">"...."</span>,<span class="string">".."</span>,<span class="string">".---"</span>,<span class="string">"-.-"</span>,<span class="string">".-.."</span>,<span class="string">"--"</span>,<span class="string">"-."</span>,<span class="string">"---"</span>,<span class="string">".--."</span>,<span class="string">"--.-"</span>,<span class="string">".-."</span>,<span class="string">"..."</span>,<span class="string">"-"</span>,<span class="string">"..-"</span>,<span class="string">"...-"</span>,<span class="string">".--"</span>,<span class="string">"-..-"</span>,<span class="string">"-.--"</span>,<span class="string">"--.."</span>];  </span><br><span class="line"><span class="keyword">const</span> alphabet = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> uniqueMorseRepresentations = <span class="function"><span class="keyword">function</span>(<span class="params">words</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> morseWords = <span class="keyword">new</span> <span class="built_in">Set</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> word <span class="keyword">of</span> words) &#123;</span><br><span class="line">        <span class="keyword">let</span> newStr = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">const</span> i <span class="keyword">of</span> word) &#123;</span><br><span class="line">            newStr += morse[alphabet.indexOf(i)];</span><br><span class="line">        &#125;</span><br><span class="line">        morseWords.add(newStr)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> morseWords.size;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/unique-morse-code-words/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leetcode 문제링크&lt;/a&gt;&lt;/p&gt;
&lt;blockq
      
    
    </summary>
    
      <category term="Algorithm" scheme="http://chiabi.github.io/categories/Algorithm/"/>
    
    
      <category term="algorithm" scheme="http://chiabi.github.io/tags/algorithm/"/>
    
      <category term="leetcode" scheme="http://chiabi.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>TIL</title>
    <link href="http://chiabi.github.io/2018/07/18/TIL/"/>
    <id>http://chiabi.github.io/2018/07/18/TIL/</id>
    <published>2018-07-18T02:14:25.000Z</published>
    <updated>2018-07-23T14:10:38.180Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="Javascript30-14차"><a href="#Javascript30-14차" class="headerlink" title="Javascript30 14차"></a>Javascript30 14차</h3><ul><li>JavaScript References VS Copying</li></ul><p>원시 타입과 찹조타입의 복사에 관한 차이와 얕은복사, 깊은 복사에 대한 내용이었다.</p><p>다음은 배열을 복사하는 방법이다.(단, 얕은 복사)<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cats = [<span class="string">'Syami'</span>, <span class="string">'Jojo'</span>, <span class="string">'Loki'</span>, <span class="string">'Kkonnim'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> team1 = cats.slice();</span><br><span class="line"><span class="keyword">const</span> team2 = [].concat(cats);</span><br><span class="line"><span class="keyword">const</span> team3 = [...cats]</span><br><span class="line"><span class="keyword">const</span> team4 = <span class="built_in">Array</span>.from(cats)</span><br></pre></td></tr></table></figure></p><blockquote><p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/from" target="_blank" rel="noopener">Array.from()</a> 메서드는 배열의 형태를 갖거나 순회 가능한 객체로부터 얕게 복사한 Array 객체를 만듭니다.</p></blockquote><p>다음은 객체를 복사하는 방법이다.(단, 얕은 복사)<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cat = &#123;</span><br><span class="line">  name: <span class="string">'Syami'</span>,</span><br><span class="line">  age: <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cat2 = <span class="built_in">Object</span>.assign(&#123;&#125;, cat, &#123; <span class="attr">kind</span>: <span class="string">'korean shot'</span>, <span class="attr">age</span>: <span class="number">11</span>&#125;)</span><br></pre></td></tr></table></figure></p><p>이러한 복사는 1 레벨의 깊이만 복사가 가능하다. 배열 안 배열 혹은 객체 안 배열 등등의 중첩되어 여러 레벨의 깊이가 생긴 객체(혹은 배열)을 복사하는 방법은 깊은 복사라고 하며 강의에서는 그 방법 중 하나를 소개해 줬는데 다음과 같다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cat = &#123;</span><br><span class="line">  name: <span class="string">'Syami'</span>,</span><br><span class="line">  age: <span class="number">10</span>,</span><br><span class="line">  family: &#123;</span><br><span class="line">    brother: [<span class="string">'Jojo'</span>, <span class="string">'Loki'</span>],</span><br><span class="line">    sister: [<span class="string">'Kkonnim'</span>, <span class="string">'Samsun'</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> cat2 = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(cat))</span><br></pre></td></tr></table></figure></p><p>그러나 이 방법은 성능상 매우 안 좋고, 직렬화 할 수 없는 속성들은(prototype이라든가) 날라가 버리기 때문에 좋은 방법은 아니라고 한다.</p><h3 id="파이널-프로젝트-2차-준비"><a href="#파이널-프로젝트-2차-준비" class="headerlink" title="파이널 프로젝트 2차 준비"></a>파이널 프로젝트 2차 준비</h3><p>서버를 GraphQL로 하자는 얘기가 나와서 다음의 영상들을 보게 되었는데, 많이 도움이 되었다.</p><ul><li><a href="https://www.youtube.com/watch?v=C57Pln3mNy0" target="_blank" rel="noopener">1강 GraphQL Server 만들기</a></li><li><a href="https://www.youtube.com/watch?v=1p-s99REAus" target="_blank" rel="noopener">Hello, GraphQL! Graph QL 도입으로 얻었던 효과 - 조민환</a></li></ul><p>그런데 프로젝트에 기획했지만 아직 구현되지 못한 부족한 부분이 많고, 처음부터 Apollo client를 쓰려니 잘 이해되지 않는 부분이 많아서 먼저 리덕스로 변경하는 것부터 처리하는 게 좋을 것 같아 리덕스를 먼저 해보기로 했다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;Javascript30-14차&quot;&gt;&lt;a href=&quot;#Javascript30-14차&quot; cla
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
  <entry>
    <title>Judge Route Circle</title>
    <link href="http://chiabi.github.io/2018/07/17/JudgeRouteCircle/"/>
    <id>http://chiabi.github.io/2018/07/17/JudgeRouteCircle/</id>
    <published>2018-07-17T14:40:55.000Z</published>
    <updated>2018-07-24T15:51:00.593Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/judge-route-circle/description/" target="_blank" rel="noopener">leetcode 문제링크</a></p><blockquote><p>Initially, there is a Robot at position (0, 0). Given a sequence of its moves, judge if this robot makes a circle, which means it moves back to the original place.</p><p>The move sequence is represented by a string. And each move is represent by a character. The valid robot moves are R (Right), L (Left), U (Up) and D (down). The output should be true or false representing whether the robot makes a circle.</p><p><strong>Example 1:</strong></p><ul><li>Input: “UD”</li><li>Output: true</li></ul><p><strong>Example 2:</strong></p><ul><li>Input: “LL”</li><li>Output: false</li></ul></blockquote><h2 id="나의-풀이"><a href="#나의-풀이" class="headerlink" title="나의 풀이"></a>나의 풀이</h2><p>문제 자체를 이해하기가 좀 어려웠다. 괜히 Circle이라 그래서 왜 원이 되지?라고 생각했는데, 그림을 그려보면 이해하기 쉬웠다. 예를들면 “RLUURDDLU”를 좌표 (0, 0)에서 시작한다고 생각해서 방향따라 그려보면 결국 다시 (0, 0)의 위치로 오게 된다. 이 경우 로봇이 원을 만든다고 가정하여 <code>true</code>를 반환하면 된다. 그래서 “LDRRLRUULR”의 경우 그려보면 (0, 0)의 위치로 돌아오지 않기 때문에 <code>false</code>를 반환하면 된다.  </p><p>정규식을 이용했다. R과 L의 수와 U와 D의 수가 같으면 원 위치로 되돌아갔다고 할 수 있으니까 다음과 같이 접근해서 풀어보았다.<br><code>|| []</code>이 부분은 마지막에 length로 구하고 싶은데 match 메소드가 정규식에 부합하는 문자열이 있으면 배열 형태로 반환하지만 없을 경우 <code>null</code>로 반환하기 때문에 정규식에 일치하는 문자가 없을 경우는 빈배열이 담기도록 하기 위해 추가했다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 68ms</span></span><br><span class="line"><span class="keyword">var</span> judgeCircle = <span class="function"><span class="keyword">function</span>(<span class="params">moves</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> R = moves.match(<span class="regexp">/R/g</span>) || [];</span><br><span class="line">  <span class="keyword">const</span> L = moves.match(<span class="regexp">/L/g</span>) || [];</span><br><span class="line">  <span class="keyword">const</span> U = moves.match(<span class="regexp">/U/g</span>) || [];</span><br><span class="line">  <span class="keyword">const</span> D = moves.match(<span class="regexp">/D/g</span>) || [];</span><br><span class="line">  <span class="keyword">return</span> R.length === L.length &amp;&amp; U.length === D.length</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>이번에는 for문을 통해 문자열을 하나씩 탐색해서 x와 y의 값에 변화를 주는 방법을 사용했다. 오른쪽으로 이동하면 x좌표가 1추가되고 왼쪽으로 이동하면 x좌표가 1 감소하는 것이라 모든 문자열을 탐색한 뒤에 x와 y의 좌표가 다시 0이 되었는지 확인한다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 72ms</span></span><br><span class="line"><span class="keyword">var</span> judgeCircle = <span class="function"><span class="keyword">function</span>(<span class="params">moves</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">of</span> moves) &#123;</span><br><span class="line">        i === <span class="string">'R'</span> ? x++ : </span><br><span class="line">        i === <span class="string">'L'</span> ? x-- :</span><br><span class="line">        i === <span class="string">'U'</span> ? y-- :</span><br><span class="line">        i === <span class="string">'D'</span> &amp;&amp; y++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x === <span class="number">0</span> &amp;&amp; y === <span class="number">0</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>같은 접근법인데 reduce 메소드를 이용해 본 방법<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 72ms</span></span><br><span class="line"><span class="keyword">var</span> judgeCircle = <span class="function"><span class="keyword">function</span>(<span class="params">moves</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> arr = moves.split(<span class="string">''</span>);</span><br><span class="line">    <span class="keyword">const</span> hor = arr.reduce(<span class="function">(<span class="params">acc, item</span>) =&gt;</span> acc + (item === <span class="string">'R'</span> ? <span class="number">1</span> : item === <span class="string">'L'</span> ? <span class="number">-1</span> : <span class="number">0</span>), <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> ver = arr.reduce(<span class="function">(<span class="params">acc, item</span>) =&gt;</span> acc + (item === <span class="string">'U'</span> ? <span class="number">1</span> : item === <span class="string">'D'</span> ? <span class="number">-1</span> : <span class="number">0</span>), <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> !(hor + ver)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h2 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h2><p>같은 접근법인데 60ms이길래 환경이 달라서 그런 것 같아서 내가 다시 넣고 돌려보니 72ms가 걸렸다. 각 변수로 x, y를 넣는 대신 배열로 두고 switch 문을 사용한 방법이다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 72ms</span></span><br><span class="line"><span class="keyword">var</span> judgeCircle = <span class="function"><span class="keyword">function</span>(<span class="params">moves</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> origin = [<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; moves.length; i++)&#123;</span><br><span class="line">        <span class="keyword">switch</span>(moves[i])&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'U'</span>:</span><br><span class="line">                origin[<span class="number">0</span>]++</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'D'</span>:</span><br><span class="line">                origin[<span class="number">0</span>]--</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'L'</span>:</span><br><span class="line">                origin[<span class="number">1</span>]--</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'R'</span>:</span><br><span class="line">                origin[<span class="number">1</span>]++</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(origin[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; origin[<span class="number">1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><hr><p>문제의 좋아요와 싫어요 수가 거의 비슷해서 왜 인가했는데, 문제 자체가 이해가 어려워서였던 것 같다. 괜히 원을 만든다는 가정이 문제를 이해하기 어렵게 했다. 근데 문제 자체를 이해하고 나니 풀이는 재미있었다.<br>특히 <code>match</code>메소드를 이용해서 <code>null</code>이 나오는데 배열의 <code>length</code> 프로퍼티로 비교하려고 하려면 어떻게 처리해야할까 고민했는데, <code>||</code> 논리 연산자를 이용해 match 메소드에서 <code>null</code>이 나오면 변수에 빈배열이 대입되도록 처리했다. 두번째 풀이의 삼항연산자에 쓴 것과 같이 <code>&amp;&amp;</code>와 <code>||</code>같은 논리 연산자의 특성을 활용해보니 코드가 굉장히 깔끔해보여서 기분이 좋았다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/judge-route-circle/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leetcode 문제링크&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
      
    
    </summary>
    
      <category term="Algorithm" scheme="http://chiabi.github.io/categories/Algorithm/"/>
    
    
      <category term="algorithm" scheme="http://chiabi.github.io/tags/algorithm/"/>
    
      <category term="leetcode" scheme="http://chiabi.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Hamming Distance</title>
    <link href="http://chiabi.github.io/2018/07/16/HammingDistance/"/>
    <id>http://chiabi.github.io/2018/07/16/HammingDistance/</id>
    <published>2018-07-16T02:07:15.000Z</published>
    <updated>2018-07-17T17:08:03.347Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/hamming-distance/description/" target="_blank" rel="noopener">leetcode 문제링크</a></p><blockquote><p><a href="https://en.wikipedia.org/wiki/Hamming_distance" target="_blank" rel="noopener">The Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p><p>Given two integers x and y, calculate the Hamming distance.</p><p><strong>Note:</strong></p><ul><li>0 ≤ x, y &lt; 231.</li></ul><p><strong>Example:</strong></p><ul><li>Input: x = 1, y = 4</li><li>Output: 2</li></ul><p><strong>Explanation:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1   (0 0 0 1)</span><br><span class="line">4   (0 1 0 0)</span><br><span class="line">       ↑   ↑</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>The above arrows point to positions where the corresponding bits are different.</p></blockquote><h2 id="나의-풀이"><a href="#나의-풀이" class="headerlink" title="나의 풀이"></a>나의 풀이</h2><blockquote><p>※ <strong>해밍거리(Hamming Distance)</strong><br>블록 부호 이론에서, 해밍 거리(Hamming距離, 영어: Hamming distance)는 곱집합 위에 정의되는 거리 함수이다. 대략, 같은 길이의 두 문자열에서, 같은 위치에서 서로 다른 기호들이 몇 개인지를 센다.</p></blockquote><p>주어진 값들을 이진수 형태에서 비교해서 같은 위치에 다른 수가 몇개인지를 세면 되는 것 같다. 이진수로 바꾸는 방법은 toString 메소드를 사용했고, 수에 따라 같은 길이가 아닐 수 있으니 뒤의 수부터 비교해주기로 했다.<br>sort를 이용해 길이가 긴 수를 정해서 reduce를 통해 그 길이에 수가 둘 다 있으면 두 수(문자)를 비교해 다르면 누적에 1을 더하고 만약 위치에 수가 없으면 수가 있는 배열의 값이 ‘1’일 경우 더한다. </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 56 ms</span></span><br><span class="line"><span class="keyword">var</span> hammingDistance = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> arr = [x.toString(<span class="number">2</span>).split(<span class="string">''</span>).reverse(), y.toString(<span class="number">2</span>).split(<span class="string">''</span>).reverse()].sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> b.length - a.length);</span><br><span class="line">    <span class="keyword">return</span> arr[<span class="number">0</span>].reduce(<span class="function">(<span class="params">acc, item, index, array</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[<span class="number">1</span>][index] &amp;&amp; arr[<span class="number">1</span>][index] !== item) &#123;</span><br><span class="line">            <span class="keyword">return</span> acc + <span class="number">1</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!arr[<span class="number">1</span>][index] &amp;&amp; item === <span class="string">'1'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> acc + <span class="number">1</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> acc</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h2><p>이걸 한 줄로 푸네…</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 60ms</span></span><br><span class="line"><span class="keyword">var</span> hammingDistance = <span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x ^ y).toString(<span class="number">2</span>).split(<span class="string">'0'</span>).join(<span class="string">''</span>).length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="1-Bitwise-XOR"><a href="#1-Bitwise-XOR" class="headerlink" title="1. ^(Bitwise XOR)"></a>1. ^(Bitwise XOR)</h3><ul><li>MDN - <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Bitwise_XOR" target="_blank" rel="noopener">^(Bitwise XOR)</a></li><li>위키백과 - <a href="https://ko.wikipedia.org/wiki/%EB%B0%B0%ED%83%80%EC%A0%81_%EB%85%BC%EB%A6%AC%ED%95%A9" target="_blank" rel="noopener">배타적 논리합</a></li></ul><p>^부분이 이해가 안되었는데 XOR이라는 연산자로 다음의 표와 같이 a와 b가 다른 경우 1을 산출한다고 한다.  </p><table><thead><tr><th>a</th><th>b</th><th>a XOR b</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>비트 연산자는 피연산자를 10진수나 16진수나 8진수와 같은 숫자가 아니라, 32비트(0과 1)의 집합으로 표현한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.    9 (base 10) = 00000000000000000000000000001001 (base 2)</span><br><span class="line">    14 (base 10) = 00000000000000000000000000001110 (base 2)</span><br><span class="line">                   --------------------------------</span><br><span class="line">14 ^ 9 (base 10) = 00000000000000000000000000000111 (base 2) = 7 (base 10)</span><br></pre></td></tr></table></figure><p>그렇다면 위의 풀이에서 x, y 간의 배타적 논리합을 구해서 그 수의 이진수 표현(문자열) 중 문자 ‘0’을 제거하면(split(‘0’)) ‘1’만 남게 되는 데 이 1은 x, y가 같은 위치에 다른 문자였음을 의미하니까 그 길이를 구하면 원하는 결과를 얻을 수 있다.  </p><hr><p>다만, 왜 이 풀이가 내 풀이보다 느린 지 아직 잘 모르겠다. 처음에는 32비트 집합간의 비교라서 그런건가 했는데 비트가 더…느릴 수…있나? 왠지 환경에 따라 다를 것 같은 미미한 차이라…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/hamming-distance/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leetcode 문제링크&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;
      
    
    </summary>
    
      <category term="Algorithm" scheme="http://chiabi.github.io/categories/Algorithm/"/>
    
    
      <category term="algorithm" scheme="http://chiabi.github.io/tags/algorithm/"/>
    
      <category term="leetcode" scheme="http://chiabi.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>flip And Invert Image</title>
    <link href="http://chiabi.github.io/2018/07/15/flipAndInvertImage/"/>
    <id>http://chiabi.github.io/2018/07/15/flipAndInvertImage/</id>
    <published>2018-07-15T13:42:39.000Z</published>
    <updated>2018-07-17T15:54:44.580Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/flipping-an-image/description/" target="_blank" rel="noopener">leetcode 문제링크</a></p><blockquote><p>Given a binary matrix A, we want to flip the image horizontally, then invert it, and return the resulting image.</p><p>To flip an image horizontally means that each row of the image is reversed.  For example, flipping [1, 1, 0] horizontally results in [0, 1, 1].</p><p>To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0. For example, inverting [0, 1, 1] results in [1, 0, 0].</p><p><strong>Example 1:</strong>  </p><ul><li>Input: [[1,1,0],[1,0,1],[0,0,0]]</li><li>Output: [[1,0,0],[0,1,0],[1,1,1]]</li><li>Explanation: First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].</li><li>Then, invert the image: [[1,0,0],[0,1,0],[1,1,1]]</li></ul><p><strong>Example 2:</strong>  </p><ul><li>Input: [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]</li><li>Output: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]</li><li>Explanation: First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].</li><li>Then invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]</li></ul><p><strong>Notes:</strong>  </p><ul><li>1 &lt;= A.length = A[0].length &lt;= 20</li><li>0 &lt;= A[i][j] &lt;= 1</li></ul></blockquote><h2 id="나의-풀이"><a href="#나의-풀이" class="headerlink" title="나의 풀이"></a>나의 풀이</h2><p>문제를 요약하면 0과 1로만 이루어진 2차원 배열을 수평으로 한번 뒤집고, 0은 1로 1은 0으로 치환되면 된다.<br>이미지 파일을 뒤집는 방법이 이런식으로 이루어지나 보다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 72 ms</span></span><br><span class="line"><span class="keyword">var</span> flipAndInvertImage = <span class="function"><span class="keyword">function</span>(<span class="params">A</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> arr = A;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, l = arr.length, n = arr[<span class="number">0</span>].length; i &lt; l; i++) &#123;</span><br><span class="line">        arr[i].reverse();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            arr[i][j] = arr[i][j] === <span class="number">1</span> ? <span class="number">0</span> : <span class="number">1</span>; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>2차원 배열이니 for문을 2번 썼다.<br>for문을 두번 쓰는 다음과 같은 경우에는 적절한 것 같은데, reverse가 원본 배열을 바꾸는 메소드이고 <code>arr[i][j]</code>에 값을 대입하는 부분 역시 원본 배열에 변화를 주기 때문에 만약에 원본 배열에 영향을 주고 싶지 않다면 깊은복사를 할 수 있도록 고려해야 될 것 같다.</p><p>그렇다면 다음과 같은 방법을 사용하면 인자로 넘겨지는 원본 배열에 변형 없이 새로운 배열을 얻을 수 있다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 68 ms</span></span><br><span class="line"><span class="keyword">var</span> flipAndInvertImage = <span class="function"><span class="keyword">function</span>(<span class="params">A</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> newArr = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, l = A.length, n = A[<span class="number">0</span>].length; i &lt; l; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> newRow = A[i].concat().reverse();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            newRow[j] = newRow[j] === <span class="number">1</span> ? <span class="number">0</span> : <span class="number">1</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        newArr.push(newRow);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>또 다른 방법으로 <code>for of</code> 문을 쓰면서 <code>map</code> 메소드를 사용하는 방법을 써봤다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 64 ms</span></span><br><span class="line"><span class="keyword">var</span> flipAndInvertImage = <span class="function"><span class="keyword">function</span>(<span class="params">A</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> newArr = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">of</span> A) &#123;</span><br><span class="line">        <span class="keyword">const</span> newRow = i.concat().reverse().map(<span class="function"><span class="params">item</span> =&gt;</span> item === <span class="number">1</span> ? <span class="number">0</span> : <span class="number">1</span>)</span><br><span class="line">        newArr.push(newRow);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h2><p>map을 두번 써서 풀었다. 그런데 이 풀이도 만약에 원본 배열을 바꾸고 싶지 않다면 reverse() 메소드 이전에 복사하는 부분이 없기 때문에 변형이 생긴다.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flipAndInvertImage = <span class="function"><span class="keyword">function</span>(<span class="params">A</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> A.map(<span class="function"><span class="params">row</span> =&gt;</span> row.reverse().map(<span class="function"><span class="params">num</span> =&gt;</span> num ? <span class="number">0</span> : <span class="number">1</span>))</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/flipping-an-image/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leetcode 문제링크&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;

      
    
    </summary>
    
      <category term="Algorithm" scheme="http://chiabi.github.io/categories/Algorithm/"/>
    
    
      <category term="algorithm" scheme="http://chiabi.github.io/tags/algorithm/"/>
    
      <category term="leetcode" scheme="http://chiabi.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Jewels and Stones</title>
    <link href="http://chiabi.github.io/2018/07/09/Stones/"/>
    <id>http://chiabi.github.io/2018/07/09/Stones/</id>
    <published>2018-07-09T14:19:43.000Z</published>
    <updated>2018-07-09T15:21:35.591Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/jewels-and-stones/description/" target="_blank" rel="noopener">leetcode 문제링크</a></p><blockquote><p>You’re given strings <code>J</code> representing the types of stones that are jewels, and <code>S</code> representing the stones you have.  Each character in <code>S</code> is a type of stone you have.  You want to know how many of the stones you have are also jewels.</p><p>The letters in J are guaranteed distinct, and all characters in <code>J</code> and <code>S</code> are letters. Letters are case sensitive, so “a” is considered a different type of stone from “A”.</p><p><strong>Example 1:</strong></p><ul><li>Input: J = “aA”, S = “aAAbbbb”</li><li>Output: 3</li></ul><p><strong>Example 2:</strong></p><ul><li>Input: J = “z”, S = “ZZ”</li><li>Output: 0</li></ul><p><strong>Note:</strong><br><code>S</code> and <code>J</code> will consist of letters and have length at most 50.<br>The characters in <code>J</code> are distinct.</p></blockquote><h2 id="나의-풀이"><a href="#나의-풀이" class="headerlink" title="나의 풀이"></a>나의 풀이</h2><p>오랜만에 풀려니 머리가 잘 굴러가지 않는데 그럴땐 일단 가장 단순 무식한 방법으로 (Brute force 식으로) 풀어버리는 게 가장 좋은 것 같다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 60ms</span></span><br><span class="line"><span class="keyword">var</span> numJewelsInStones = <span class="function"><span class="keyword">function</span>(<span class="params">J, S</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> jArr = J.split(<span class="string">''</span>);</span><br><span class="line">    <span class="keyword">const</span> sArr = S.split(<span class="string">''</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, l = jArr.length; i &lt; l; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>, m = sArr.length; j &lt; m; j++) &#123;</span><br><span class="line">            sArr[j] === jArr[i] &amp;&amp; num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>아니 근데 반복문 2번은 돌려야 풀 수 있는 문제네;;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 64ms</span></span><br><span class="line"><span class="keyword">var</span> numJewelsInStones = <span class="function"><span class="keyword">function</span>(<span class="params">J, S</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">of</span> J) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> j <span class="keyword">of</span> S) &#123;</span><br><span class="line">            j === i &amp;&amp; num++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h2 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h2><p>reduce 메서드를 이용한 방법<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 52ms</span></span><br><span class="line"><span class="keyword">var</span> numJewelsInStones = <span class="function"><span class="keyword">function</span>(<span class="params">J, S</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> jewels = J.split(<span class="string">''</span>);</span><br><span class="line">  <span class="keyword">return</span> S.split(<span class="string">''</span>).reduce(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(jewels.includes(b)) &#123;</span><br><span class="line">      a += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">  &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/jewels-and-stones/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leetcode 문제링크&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;

      
    
    </summary>
    
      <category term="Algorithm" scheme="http://chiabi.github.io/categories/Algorithm/"/>
    
    
      <category term="algorithm" scheme="http://chiabi.github.io/tags/algorithm/"/>
    
      <category term="leetcode" scheme="http://chiabi.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>TIL 20180624</title>
    <link href="http://chiabi.github.io/2018/06/24/TIL/"/>
    <id>http://chiabi.github.io/2018/06/24/TIL/</id>
    <published>2018-06-24T11:24:53.000Z</published>
    <updated>2018-06-24T13:41:27.780Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="파이널-프로젝트"><a href="#파이널-프로젝트" class="headerlink" title="파이널 프로젝트"></a>파이널 프로젝트</h3><ul><li>팀 명: geek-ryan</li><li>프로젝트 명: <a href="https://github.com/geek-ryan/seemva" target="_blank" rel="noopener">seemva</a></li></ul><h4 id="Ant-Design-테스트"><a href="#Ant-Design-테스트" class="headerlink" title="Ant Design 테스트"></a><a href="https://ant.design/docs/react/getting-started" target="_blank" rel="noopener">Ant Design</a> 테스트</h4><p>리액트 컴포넌트로 제공하거나 form 같은 경우 verify 해주는 부분의 가이드를 제공해준다. 나중에 만들어 볼지도 모를 calendar컴포넌트도 제공하고, airbnb의 datapicker를 사용하려고 했었는데, 이 역시 컴포넌트로 제공하고 있다. timeline 컴포넌트는 프로젝트에서 쓰려고 하는 것과 맞지 않아서 아쉽지만…<br>각자 테스트 해본 뒤 방향을 결정하기로 했는데, 논의 끝에 우선 이 디자인 컴포넌트를 이용해 보기로 했다.</p><h4 id="와이어프레임"><a href="#와이어프레임" class="headerlink" title="와이어프레임"></a>와이어프레임</h4><p>각자 벤치마킹을 해보고 와이어프레임을 그려보기로 했다. 논의는 트렐로를 통해 이루어졌다. 벤치마킹한 사이트의 이미지나 링크를 트렐로를 통해 공유하고, 팀원이 손그림으로 와이어프레임을 그린 것을 트렐로에 올린 것을 <a href="https://ovenapp.io/" target="_blank" rel="noopener">카카오 oven</a>을 통해 정리했다.<br>로그인, 회원가입, 보드 화면까지만 만들었는데, 한꺼번에 하기보다는 먼저 컴포넌트별, 페이지별로 개발을 들어가면서 수정하고 추가하는 식으로 진행하는 것이 좋을 것 같다.</p><ul><li>로그인, 회원가입: chiabi</li><li>보드화면, 보드의 사이드바: akiraei</li></ul><h4 id="네이밍-컨벤션"><a href="#네이밍-컨벤션" class="headerlink" title="네이밍 컨벤션"></a>네이밍 컨벤션</h4><blockquote><p><strong>예. Login form</strong></p><p>directory : filename</p><ul><li>components: UserFormButtonPC.js</li><li>containers:UserFormButtonCC.js</li><li>contexts: UserFormCTX.js</li><li>pages: LoginPage.js</li><li>hocs: withAuth.js</li><li>serverAPI.js</li></ul><p>※ components 파일에서 PC 작성시 반드시 storybook 파일 남길 것<br>UserFormButtonPC.stories.js</p><p>※ 되도록 축약 표현이 아닌 풀 네임으로 만들것 (Btn(x), Button(o))</p></blockquote><h4 id="앞으로-사용-예정인-라이브러리"><a href="#앞으로-사용-예정인-라이브러리" class="headerlink" title="앞으로 사용 예정인 라이브러리"></a>앞으로 사용 예정인 라이브러리</h4><ul><li>드래그앤 드롭 - <a href="https://github.com/react-dnd/react-dnd" target="_blank" rel="noopener">react-dnd</a></li><li>타임라인 - <a href="https://www.npmjs.com/package/react-calendar-timeline" target="_blank" rel="noopener">react-calendar-timeline</a></li></ul><p>프로필 부분은 고민이다. 사진을 올릴 수 있어야하는데, 이미지 서버를 따로 두는 방법을 고민 중이다. 이부분을 내가 테스트해보기로 해서 로그인과 회원가입 부분을 맡기로 했다.  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;파이널-프로젝트&quot;&gt;&lt;a href=&quot;#파이널-프로젝트&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
  <entry>
    <title>TIL 20180622</title>
    <link href="http://chiabi.github.io/2018/06/23/TIL/"/>
    <id>http://chiabi.github.io/2018/06/23/TIL/</id>
    <published>2018-06-22T15:12:20.000Z</published>
    <updated>2018-07-17T17:09:59.754Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="1-프론트엔드-개발-스쿨"><a href="#1-프론트엔드-개발-스쿨" class="headerlink" title="1. 프론트엔드 개발 스쿨"></a>1. 프론트엔드 개발 스쿨</h3><p>강사님이 게시판 게시글 CRUD와 댓글은 보여주는 것 까지만 구현하신 코드를 보면서 설명해주셨다.<br>코드를 보니 또 내가 생각한 것과는 context 설계가 달랐다. 나는 post 폼은 PostListContext.js(componentDidMount 훅에 서버로 포스트 리스트에 대해서 GET 요청을 보내는 부분이 있는)에 서버에 POST하는 메소드를 추가해서 post 폼 컨테이너로 내려보내고, 나중에 post 폼 수정 페이지에서는 PostContext.js(componentDidMount 훅에 서버로 특정 포스트에 대해서 GET 요청을 보내는 부분이 있는)에 PATCH 요청을 보내는 메소드를 추가해서 내려보내는 식으로 해서 context를 같이 사용하려고 했는데, 강사님은 폼 추가/삭제에 대한 context를 따로 만들어서 id가 있을 경우에 따라 조건문을 통해 componentDidMount 훅에서 특정 포스트에 대한 GET 요청을 보내는 식으로 구현하셨다.<br>그리고 내가 간과하고 있던 것이 나는 게시글 추가 시에 게시판 목록으로 Redirect를 걸었는데 생각해보니 사용자의 관점에서는 게시글 목록이 아니라 생성된 게시글의 보기 페이지로 Redirect를 걸어주는 게 맞는 것 같다.</p><p>그리고 페이지는 함수형 컴포넌트로 만들었는데, 그러면서 화살표 함수로 만들면서 익명함수로 만든게 개발자 도구에서는 Unknown으로 보인다는 것도 알게 되었다. 그리고 Router부분을 나는 이슈 페이지에서 찾은 코드를 추가했는데, storybook-react-router라는 라이브러리가 있어서 그걸 쓰면 더 간략한 코드로 내가 처리한 부분을 대체할 수 있었다.</p><p>나는 Components 디렉터리의 PC 컴포넌트에서 username이나 password 상태를 관리하고 Context의 메소드를 내려받아서 핸들링해줬는데, 강사님은 Container에서 처리해주셨다. 이부분은 따로 여쭤봤는데, 물론 PC에서 관리해도 그것은 어떻게 설계하느냐(말하자면 관리 정책 측면이라)에 따른 거라 문제 될 것은 없지만, 로그인의 경우 사용자 입력을 받아 서버에 요청을 보내고 성공했는지에 따라 success 상태를 토글해서 Redirect를 걸어준다면 그 부분은 외부와 연동되는 부분이 들어가게 되니까 CC에서 처리하는 게 좋을 거라고 생각했다고 하셨다.</p><h3 id="2-파이널-프로젝트-회의"><a href="#2-파이널-프로젝트-회의" class="headerlink" title="2. 파이널 프로젝트 회의"></a>2. 파이널 프로젝트 회의</h3><p>파이널 프로젝트로 쇼핑몰을 할 지 기존에 템플릿으로 만들어봤던 프로젝트 관리 서비스를 만들지 고민했다. 팀원이랑 의논 끝에 기존에 만들어본 프로젝트 관리 서비스를 하는 대신에 규모를 더 키워보기로 했다. 이전에는 사용자의 프로젝트 todo 리스트에 가까웠다면 이번에는 아예 팀 별로 프로젝트를 생성해서 관리할 수 있는 트렐로, asana 같은 서비스를 만들어보기로 했다.(물론 그들이 제공하는 모든 기능을 구현할 수는 없겠지만) 그리고 라이브러리를 이용해 타임라인과 캘린더 보기까기 구현해보기로 계획했다.<br>오늘 강사님이 알려주신 eslint와 prettier 설정으로 코딩 스타일은 얼추 맞출 수 있게 되었고, 구체적으로 설계하는 부분은 같이 맞춰나가기로 했다. 기능단위로 PC를 먼저 구현한 뒤에 일단 Context를 만들어 상태를 관리하고 Context에서 보관할 필요가 없는 상태라면 CC에서 처리해주기로 했다.  </p><p>오늘은 일단 프로젝트를 어느정도 규모로 할 지와 나중에 수정할지라고 일단 컴포넌트 작성 순서와 상태 관리를 어디에서 할 건지 먼저 정하고, 내일은 일단 어느정도 와이어프레임을 위해 각자 벤치마킹을 해보고 일요일까지 와이어프레임을 만든 뒤 기능 별 분담을 하기로 했다.</p><p>2주내에 다 할 수 있을까 조금 걱정이 되긴 하는데, 만드는 것은 재미있을 것 같다. 목표한대로 1주 정도는 전체적으로 만들고 남은 기간에는 스타일링과 코드 개선을 할 수 있으면 좋겠다. </p><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>파이널 프로젝트 와이어프레임을 위한 벤치마킹</li><li>강사님 게시판 코드 읽어보고 연습하기</li><li>Ant Design 써보기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;1-프론트엔드-개발-스쿨&quot;&gt;&lt;a href=&quot;#1-프론트엔드-개발-스쿨&quot; class=&quot;he
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
  <entry>
    <title>TIL 2018021</title>
    <link href="http://chiabi.github.io/2018/06/21/TIL/"/>
    <id>http://chiabi.github.io/2018/06/21/TIL/</id>
    <published>2018-06-21T14:24:55.000Z</published>
    <updated>2018-06-22T15:17:37.746Z</updated>
    
    <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><h3 id="1-리액트로-게시판-만들기"><a href="#1-리액트로-게시판-만들기" class="headerlink" title="1. 리액트로 게시판 만들기"></a>1. 리액트로 게시판 만들기</h3><p>다 완성하고 싶었는데, 오류도 잡고 어떻게 만들어야할까 고민하다보니 댓글까지는 넣지 못했다.<br>원래는 PostList와 Post Context로 분리하지 않고 Post Context 하나로 모든 상태를 같이 관리하려고 했는데, 강사님이 보여주신 코드를 보니 list와 view에서 쓸 수 있는 Context를 따로 나누셨다. 왜 그렇게 하셨을까 생각을 해보니 나는 어차피 post를 모두 불러오니까 그걸로 filter메소드 등을 써서 특정 id의 post를 찾으면 되지 않을까라고 생각했는데(뷰페이지는 그렇게 만들기까지 했었다.), 새 글 작성은 몰라도 글을 수정하는 페이지를 어떻게 처리할 건가 생각해보니 componetDidMount시에 보내는 요청이 다르기 때문에 따로 context를 분리하는 게 더 나을것 같아서 수정했다.<br>router 사용시 ‘/post’(리스트) ‘/post/write’(새 글 작성), ‘/post/1’(뷰페이지) 이렇게 주소가 표시되도록 하려고 했는데, write 페이지가 렌더링 되지 않았다. 이유는 ‘/post/write역시 ‘/post/:postId’ Route에 걸리기 때문이었다. ‘/post/write’ Route에 exact를 추가하고 위로 올리니 해결되었다.<br>그 다음 문제는 write페이지에서<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https://&#123;server&#125;/posts/write?_expand=user 404 ()</span><br></pre></td></tr></table></figure></p><p>이런식으로 404에러를 던지고 있는데, 왜 저런식으로 요청을 보내나했더니 처음에는 <code>&lt;Route&gt;</code>를 <code>&lt;Switch&gt;</code>로 둘러줬다가 exact를 쓰니까 제거해도 되지 않을까 했는데, 그렇게 되면 write일때도 걸리고 post의 params로도 걸려서 뷰페이지도 렌더링 되고 있었다. 다시 <code>&lt;Switch&gt;</code>로 둘러줘서 하나의 Route만 걸리도록 했더니 해결되었다.<br>스토리북에서 테스트하는 컴포넌트에 react router의 컴포넌트 사용으로 오류가 자꾸 발생되었는데, 이부분은 찾아보니 스토리북 깃헙에 이슈로 올라와 있었다. <a href="https://github.com/storybooks/storybook/issues/769" target="_blank" rel="noopener">addDecorator를 이용한 해결방법도 찾을 수 있었다.</a></p><h2 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h2><ul><li>파이널 프로젝트 기획하기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h2&gt;&lt;h3 id=&quot;1-리액트로-게시판-만들기&quot;&gt;&lt;a href=&quot;#1-리액트로-게시판-만들기&quot; class=&quot;
      
    
    </summary>
    
      <category term="TIL" scheme="http://chiabi.github.io/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://chiabi.github.io/tags/TIL/"/>
    
  </entry>
  
</feed>
